{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","message","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.8e4ad196.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data);\n  }\n  const xhr = new XMLHttpRequest(); // xhr = SomeClass()\n  const url = `http://localhost:8000/api${endpoint}`;\n  xhr.responseType = \"json\";\n  const csrftoken = getCookie(\"csrftoken\");\n  xhr.open(method, url);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n  if (csrftoken) {\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\"); // ajax 를 사용하기 위한 세팅1\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\"); // ajax 를 사용하기 위한 세팅2\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken); // ajax Cross Site Request Forgery protection\n  }\n\n  xhr.onload = function () {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail;\n      if (\n        detail ===\n        \"자격 인증데이터(authentication credentials)가 제공되지 않았습니다.\"\n      ) {\n        if (window.location.href.indexOf(\"login\") === -1) {\n          window.location.href = \"/login?showLoginRequired=true\";\n        }\n      }\n    }\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    // console.log(\"error\", e);\n    callback({ message: \"해당 요청은 오류가 있습니다.\" }, 400);\n  };\n  xhr.send(jsonData);\n}\n","import { backendLookup } from \"../lookup\";\n\nexport function apiTweetFeed(callback, nextUrl) {\n  let endpoint = \"/tweets/feed\";\n  if (nextUrl !== null && nextUrl !== undefined) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n  }\n  backendLookup(\"GET\", endpoint, callback);\n}\n\nexport function apiTweetCreate(newTweet, callback) {\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n  const data = { id: tweetId, action: action };\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n  let endpoint = \"/tweets/\";\n  if (username) {\n    endpoint = `/tweets/?username=${username}`;\n  }\n  if (nextUrl !== null && nextUrl !== undefined) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n  }\n  backendLookup(\"GET\", endpoint, callback);\n}\n","import React from \"react\";\n\nimport { apiTweetAction } from \"./lookup\";\n\nexport function ActionBtn(props) {\n  const { tweet, action, didPerformAction } = props;\n  const likes = tweet.likes ? tweet.likes : 0;\n  const className = props.className\n    ? props.className\n    : \"btn btn-primary btn-sm\";\n  const actionDisplay = action.display ? action.display : \"Action\";\n\n  const handleActionBackendEvent = (response, status) => {\n    console.log(response, status);\n    if ((status === 200 || status === 201) && didPerformAction) {\n      didPerformAction(response, status);\n    }\n  };\n  const handleClick = (event) => {\n    event.preventDefault();\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n  };\n  const display =\n    action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\n  return (\n    <button className={className} onClick={handleClick}>\n      {display}\n    </button>\n  );\n}\n","import React from \"react\";\n\nexport function UserLink(props) {\n  const { username } = props;\n  const handleUserLink = (event) => {\n    window.location.href = `/profiles/${username}`;\n  };\n  return (\n    <span className=\"pointer\" onClick={handleUserLink}>\n      {props.children}\n    </span>\n  );\n}\n\nexport function UserDisplay(props) {\n  const { user, includeFullName } = props;\n  const nameDisplay =\n    includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\n  return (\n    <React.Fragment>\n      {nameDisplay}\n      <UserLink username={user.username}>@{user.username}</UserLink>\n    </React.Fragment>\n  );\n}\n\nexport function UserPicture(props) {\n  const { user } = props;\n  return (\n    <UserLink username={user.username}>\n      <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\n        {user.username[0]}\n      </span>\n    </UserLink>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { ActionBtn } from \"./buttons\";\n\nimport { UserDisplay, UserPicture } from \"../profiles\";\n\nexport function ParentTweet(props) {\n  const { tweet } = props;\n  return tweet.parent ? (\n    <Tweet\n      isRetweet\n      retweeter={props.retweeter}\n      hideActions\n      className={\" \"}\n      tweet={tweet.parent}\n    />\n  ) : null;\n}\nexport function Tweet(props) {\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\n  const [actionTweet, setActionTweet] = useState(\n    props.tweet ? props.tweet : null\n  );\n  let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  className =\n    isRetweet === true ? `${className} p-2 border rounded` : className;\n  const path = window.location.pathname;\n  const match = path.match(/(?<tweetid>\\d+)/);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return (\n    <div className={className}>\n      {isRetweet === true && (\n        <div className=\"mb-2\">\n          <span className=\"small text-muted\">\n            Retweet via <UserDisplay user={retweeter} />\n          </span>\n        </div>\n      )}\n      <div className=\"d-flex\">\n        <div className=\"\">\n          <UserPicture user={tweet.user} />\n        </div>\n        <div className=\"col-11\">\n          <div>\n            <p>\n              <UserDisplay includeFullName user={tweet.user} />\n            </p>\n            <p>{tweet.content}</p>\n\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\n          </div>\n          <div className=\"btn btn-group px-0\">\n            {actionTweet && hideActions !== true && (\n              <React.Fragment>\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"like\", display: \"Likes\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\n                />\n              </React.Fragment>\n            )}\n            {isDetail === true ? null : (\n              <button\n                className=\"btn btn-outline-primary btn-sm\"\n                onClick={handleLink}\n              >\n                View\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { apiTweetList } from \"./lookup\";\nimport { Tweet } from \"./detail\";\n\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [nextUrl, setNextUrl] = useState(null);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setTweetsInit(response.results);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"오류가 있습니다.\");\n        }\n      };\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = (newTweet) => {\n    const updateTweetsInit = [...tweetsInit];\n    updateTweetsInit.unshift(newTweet);\n    setTweetsInit(updateTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(tweets);\n    setTweets(updateFinalTweets);\n  };\n\n  const handleLoadNext = (event) => {\n    event.preventDefault();\n    if (nextUrl !== null) {\n      const handleLoadNextRespones = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          const newTweets = [...tweets].concat(response.results);\n          setTweetsInit(newTweets);\n          setTweets(newTweets);\n        } else {\n          alert(\"오류가 있습니다.\");\n        }\n      };\n      apiTweetList(props.username, handleLoadNextRespones, nextUrl);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {tweets.map((item, index) => {\n        return (\n          <Tweet\n            tweet={item}\n            didRetweet={handleDidRetweet}\n            className=\"my-5 py-5 border bg-white text-dark\"\n            key={`${index}-{item.id}`}\n          />\n        );\n      })}\n      {nextUrl !== null && (\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\n          Load Next\n        </button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { apiTweetCreate } from \"./lookup\";\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef();\n  const { didTweet } = props;\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    if (status === 201) {\n      didTweet(response);\n    } else {\n      console.log(response);\n      alert(\"오류가 발생했습니다. 다시 시도하세요.\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    // backend api request\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = \"\";\n  };\n  return (\n    <div className={props.className}>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          ref={textAreaRef}\n          required={true}\n          className=\"form-control\"\n          name=\"tweet\"\n        ></textarea>\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\n          Tweet\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { apiTweetFeed } from \"./lookup\";\nimport { Tweet } from \"./detail\";\n\nexport function FeedList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [nextUrl, setNextUrl] = useState(null);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setTweetsInit(response.results);\n          setTweetsDidSet(true);\n        }\n      };\n      apiTweetFeed(handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = (newTweet) => {\n    const updateTweetsInit = [...tweetsInit];\n    updateTweetsInit.unshift(newTweet);\n    setTweetsInit(updateTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(tweets);\n    setTweets(updateFinalTweets);\n  };\n\n  const handleLoadNext = (event) => {\n    event.preventDefault();\n    if (nextUrl !== null) {\n      const handleLoadNextRespones = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          const newTweets = [...tweets].concat(response.results);\n          setTweetsInit(newTweets);\n          setTweets(newTweets);\n        }\n      };\n      apiTweetFeed(handleLoadNextRespones, nextUrl);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {tweets.map((item, index) => {\n        return (\n          <Tweet\n            tweet={item}\n            didRetweet={handleDidRetweet}\n            className=\"my-5 py-5 border bg-white text-dark\"\n            key={`${index}-{item.id}`}\n          />\n        );\n      })}\n      {nextUrl !== null && (\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\n          Load Next\n        </button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { TweetCreate } from \"./create\";\nimport { Tweet } from \"./detail\";\nimport { apiTweetDetail } from \"./lookup\";\nimport { TweetsList } from \"./list\";\nimport { FeedList } from \"./feed\";\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n  return (\n    <div className={props.className}>\n      {canTweet === true && (\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\n      )}\n      <FeedList newTweets={newTweets} {...props} />\n    </div>\n  );\n}\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n  return (\n    <div className={props.className}>\n      {canTweet === true && (\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\n      )}\n      <TweetsList newTweets={newTweets} {...props} />\n    </div>\n  );\n}\n\nexport function TweetDetailComponent(props) {\n  const { tweetId } = props;\n  const [didLookup, setDidLookup] = useState(false);\n  const [tweet, setTweet] = useState(null);\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response);\n    } else {\n      alert(\"There was an error finding your tweet.\");\n    }\n  };\n  useEffect(() => {\n    if (didLookup === false) {\n      apiTweetDetail(tweetId, handleBackendLookup);\n      setDidLookup(true);\n    }\n  }, [tweetId, didLookup, setDidLookup]);\n\n  return tweet === null ? null : (\n    <Tweet tweet={tweet} className={props.className} />\n  );\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { TweetsComponent } from \"./tweets\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from \"./tweets\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst appEl = document.getElementById(\"root\");\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement;\nconst tweetEl = document.getElementById(\"tweetme-2\");\nif (tweetEl) {\n  ReactDOM.render(e(TweetsComponent, tweetEl.dataset), tweetEl);\n}\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\");\nif (tweetEl) {\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\ntweetDetailElements.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}