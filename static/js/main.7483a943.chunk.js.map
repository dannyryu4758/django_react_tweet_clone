{"version":3,"sources":["logo.svg","lookup/components.js","tweets/button.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","console","log","message","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","path","window","location","pathname","idRegex","match","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","href","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweeDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetEl","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.7483a943.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data);\n  }\n  const xhr = new XMLHttpRequest(); // xhr = SomeClass()\n  const url = `http://localhost:8000/api${endpoint}`;\n  xhr.responseType = \"json\";\n  const csrftoken = getCookie(\"csrftoken\");\n  xhr.open(method, url);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n  if (csrftoken) {\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\"); // ajax 를 사용하기 위한 세팅1\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\"); // ajax 를 사용하기 위한 세팅2\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken); // ajax Cross Site Request Forgery protection\n  }\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({ message: \"해당 요청은 오류가 있습니다.\" }, 400);\n  };\n  xhr.send(jsonData);\n}\n","import React from \"react\";\n\nimport { apiTweetAction } from \"./lookup\";\n\nexport function ActionBtn(props) {\n  const { tweet, action, didPerformAction } = props;\n  const likes = tweet.likes ? tweet.likes : 0;\n  const className = props.className\n    ? props.className\n    : \"btn btn-primary btn-sm\";\n  const actionDisplay = action.display ? action.display : \"Action\";\n\n  const handleActionBackendEvent = (response, status) => {\n    console.log(response, status);\n    if ((status === 200 || status === 201) && didPerformAction) {\n      didPerformAction(response, status);\n    }\n  };\n  const handleClick = (event) => {\n    event.preventDefault();\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n  };\n  const display =\n    action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\n  return (\n    <button className={className} onClick={handleClick}>\n      {display}\n    </button>\n  );\n}\n","import { backendLookup } from \"../lookup\";\n\nexport function apiTweetCreate(newTweet, callback) {\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n  const data = { id: tweetId, action: action };\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\n}\n\nexport function apiTweeDetail(tweetId, callback) {\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\n}\n\nexport function apiTweetList(username, callback) {\n  let endpoint = \"/tweets/\";\n  if (username) {\n    endpoint = `/tweets/?username=${username}`;\n  }\n  backendLookup(\"GET\", endpoint, callback);\n}\n","import React, { useState } from \"react\";\nimport { ActionBtn } from \"./button\";\n\nexport function ParentTweet(props) {\n  const { tweet } = props;\n  return tweet.parent ? (\n    <div className=\"row\">\n      <div className=\"col-11 mx-auto p-3 border rounded\">\n        <p className=\"mb-0 text-muted small\">Retweet</p>\n        <Tweet hideActions className={\" \"} tweet={tweet.parent} />\n      </div>\n    </div>\n  ) : null;\n}\n\nexport function Tweet(props) {\n  const { tweet, didRetweet, hideActions } = props;\n  const [actionTweet, setActionTweet] = useState(\n    props.tweet ? props.tweet : null\n  );\n  const className = props.className\n    ? props.className\n    : \"col-10 mx-auto col-md-6\";\n  const path = window.location.pathname;\n  const idRegex = /(?<tweetid>\\d+)/;\n  const match = path.match(idRegex);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  if (match) {\n  }\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return (\n    <div className={className}>\n      <div>\n        <p>\n          {tweet.id} - {tweet.content}\n        </p>\n        <ParentTweet tweet={tweet} />\n      </div>\n      <div className=\"btn btn-group\">\n        {actionTweet && hideActions !== true && (\n          <React.Fragment>\n            <ActionBtn\n              tweet={actionTweet}\n              didPerformAction={handlePerformAction}\n              action={{ type: \"like\", display: \"Likes\" }}\n            />\n            <ActionBtn\n              tweet={actionTweet}\n              didPerformAction={handlePerformAction}\n              action={{ type: \"unlike\", display: \"Unlike\" }}\n            />\n            <ActionBtn\n              tweet={actionTweet}\n              didPerformAction={handlePerformAction}\n              action={{ type: \"retweet\", display: \"Retweet\" }}\n            />\n          </React.Fragment>\n        )}\n        {isDetail === true ? null : (\n          <button\n            className=\"btn btn-outline-primary btn-sm\"\n            onClick={handleLink}\n          >\n            View\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { apiTweetList } from \"./lookup\";\nimport { Tweet } from \"./detail\";\n\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"오류가 있습니다.\");\n        }\n      };\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = (newTweet) => {\n    const updateTweetsInit = [...tweetsInit];\n    updateTweetsInit.unshift(newTweet);\n    setTweetsInit(updateTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(tweets);\n    setTweets(updateFinalTweets);\n  };\n  return tweets.map((item, index) => {\n    return (\n      <Tweet\n        tweet={item}\n        didRetweet={handleDidRetweet}\n        className=\"my-5 py-5 border bg-white text-dark\"\n        key={`${index}-{item.id}`}\n      />\n    );\n  });\n}\n","import React from \"react\";\nimport { apiTweetCreate } from \"./lookup\";\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef();\n  const { didTweet } = props;\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    if (status === 201) {\n      didTweet(response);\n    } else {\n      console.log(response);\n      alert(\"오류가 발생했습니다. 다시 시도하세요.\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    // backend api request\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = \"\";\n  };\n  return (\n    <div className={props.className}>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          ref={textAreaRef}\n          required={true}\n          className=\"form-control\"\n          name=\"tweet\"\n        ></textarea>\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\n          Tweet\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { TweetsList } from \"./list\";\nimport { TweetCreate } from \"./create\";\nimport { apiTweeDetail } from \"./lookup\";\nimport { Tweet } from \"./detail\";\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  console.log(canTweet === false);\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n\n  return (\n    <div className={props.className}>\n      {canTweet === true && (\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\n      )}\n      <TweetsList newTweets={newTweets} {...props} />\n    </div>\n  );\n}\n\nexport function TweetDetailComponent(props) {\n  const { tweetId } = props;\n  const [didLookup, setDidLookup] = useState(false);\n  const [tweet, setTweet] = useState(null);\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response);\n    } else {\n      alert(\"해당 트윗을 찾는 도중 오류가 발생하였습니다.\");\n    }\n  };\n  useEffect(() => {\n    if (didLookup === false) {\n      apiTweeDetail(tweetId, handleBackendLookup);\n      setDidLookup(true);\n    }\n  }, [tweetId, didLookup, setDidLookup]);\n  return tweet === null ? null : (\n    <Tweet tweet={tweet} className={props.className} />\n  );\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { TweetsComponent } from \"./tweets\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { TweetsComponent, TweetDetailComponent } from \"./tweets\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst appEl = document.getElementById(\"root\");\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement;\nconst tweetEl = document.getElementById(\"tweetme-2\");\nif (tweetEl) {\n  console.log(tweetEl.dataset);\n  ReactDOM.render(e(TweetsComponent, tweetEl.dataset), tweetEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\ntweetDetailElements.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}